{"version":3,"file":"LoginForm-4CRgA1ul.js","sources":["../../src/pages/LoginForm.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Button } from \"../components/ui/button\";\nimport { Input } from \"../components/ui/input\";\nimport { Label } from \"../components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"../components/ui/select\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"../components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\nimport { Alert, AlertDescription } from \"../components/ui/alert\";\nimport { useAuth } from \"../hooks/useAuth\";\nimport { AuthService } from \"../services/auth.service\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport function LoginForm() {\n  const { login } = useAuth();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [entidadeId, setEntidadeId] = useState<number | undefined>(undefined);\n  const [entidades, setEntidades] = useState<\n    { entidadeId: number; nome: string }[]\n  >([]);\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [needsPasswordChange, setNeedsPasswordChange] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [isChangingPassword, setIsChangingPassword] = useState(false);\n  const navigate = useNavigate();\n\n  // Carregar entidades ao montar o componente\n  useEffect(() => {\n    const loadEntidades = async () => {\n      try {\n        const entidadesData = await AuthService.getEntidades();\n        setEntidades(entidadesData);\n\n        // Se há apenas uma entidade, selecionar automaticamente\n        if (entidadesData.length === 1) {\n          setEntidadeId(entidadesData[0].entidadeId);\n        }\n      } catch (error) {\n        console.error(\"Erro ao carregar entidades:\", error);\n        setError(\"Erro ao carregar entidades. Tente novamente.\");\n      }\n    };\n\n    loadEntidades();\n  }, []);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccessMessage(\"\");\n\n    // Validações básicas\n    if (!email || !password) {\n      setError(\"Por favor, preencha todos os campos\");\n      return;\n    }\n\n    if (!email.includes(\"@\")) {\n      setError(\"Por favor, insira um email válido\");\n      return;\n    }\n\n    if (entidades.length > 1 && !entidadeId) {\n      setError(\"Por favor, selecione uma entidade\");\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      // Limpa storage antes de fazer novo login\n      localStorage.clear();\n      sessionStorage.clear();\n\n      // Faz a chamada à API de autenticação\n      const response = await AuthService.login({\n        email,\n        password,\n        entidadeId: entidadeId || undefined,\n      });\n\n      // Verificar se precisa trocar a senha\n      if (response.user?.trocaSenha) {\n        setNeedsPasswordChange(true);\n        return;\n      }\n\n      // Verifica se veio o token e dados do usuário\n      if (response.auth?.accessToken && response.user) {\n        // Chama a função de login do contexto de autenticação\n        login(email, password);\n        // Redireciona para o main\n        navigate(\"/main\");\n      } else {\n        throw new Error(\"Dados de autenticação incompletos\");\n      }\n    } catch (error) {\n      // Limpa storage em caso de erro\n      localStorage.removeItem(\"jwtToken\");\n      localStorage.removeItem(\"userData\");\n\n      if (error instanceof Error) {\n        setError(error.message);\n        console.error(\"Erro no login:\", error);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handlePasswordChange = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccessMessage(\"\");\n\n    // Validações\n    if (!newPassword || !confirmPassword) {\n      setError(\"Por favor, preencha todos os campos\");\n      return;\n    }\n\n    if (newPassword.length < 6) {\n      setError(\"A nova senha deve ter pelo menos 6 caracteres\");\n      return;\n    }\n\n    if (newPassword !== confirmPassword) {\n      setError(\"As senhas não coincidem\");\n      return;\n    }\n\n    setIsChangingPassword(true);\n\n    try {\n      // Obter o ID do usuário do token ou do contexto\n      const user = AuthService.getUser();\n      if (!user) {\n        setError(\"Usuário não encontrado. Faça login novamente.\");\n        return;\n      }\n\n      // Chamar API para trocar senha\n      await AuthService.changePassword(user.codigo, {\n        newPassword,\n        confirmPassword,\n      });\n\n      setError(\"\");\n      setNeedsPasswordChange(false);\n      setNewPassword(\"\");\n      setConfirmPassword(\"\");\n\n      // Limpar campos de login e mostrar mensagem de sucesso\n      setEmail(\"\");\n      setPassword(\"\");\n      setEntidadeId(undefined);\n      setSuccessMessage(\n        \"Senha alterada com sucesso! Faça login com sua nova senha.\"\n      );\n    } catch (error) {\n      console.error(\"Erro ao trocar senha:\", error);\n      setError(\"Erro ao trocar senha. Tente novamente.\");\n    } finally {\n      setIsChangingPassword(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-blue-900 py-12 px-4 sm:px-6 lg:px-8\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"space-y-1\">\n          <CardTitle className=\"text-center\">ClinicaTech</CardTitle>\n          <CardDescription className=\"text-center\">\n            Faça login para acessar o sistema\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {!needsPasswordChange ? (\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\n              {error && (\n                <Alert variant=\"destructive\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{error}</AlertDescription>\n                </Alert>\n              )}\n\n              {successMessage && (\n                <Alert className=\"border-green-200 bg-green-50 text-green-800\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{successMessage}</AlertDescription>\n                </Alert>\n              )}\n\n              {entidades.length > 1 && (\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"entidade\">Entidade</Label>\n                  <Select\n                    value={entidadeId?.toString() || \"\"}\n                    onValueChange={(value) => setEntidadeId(parseInt(value))}\n                    disabled={isLoading}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Selecione uma entidade\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {entidades.map((entidade) => (\n                        <SelectItem\n                          key={entidade.entidadeId}\n                          value={entidade.entidadeId.toString()}\n                        >\n                          {entidade.nome}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              )}\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"email\">E-mail</Label>\n                <Input\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"seu.email@empresa.com\"\n                  value={email}\n                  autoComplete=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  disabled={isLoading}\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"password\">Senha</Label>\n                <Input\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"Digite sua senha\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  disabled={isLoading}\n                />\n              </div>\n\n              <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                {isLoading ? \"Entrando...\" : \"Entrar\"}\n              </Button>\n\n              <div className=\"text-sm text-muted-foreground text-center mt-4\">\n                <p>ClinicaTech Sistemas</p>\n              </div>\n            </form>\n          ) : (\n            <form onSubmit={handlePasswordChange} className=\"space-y-4\">\n              <div className=\"text-center mb-4\">\n                <h3 className=\"text-lg font-semibold\">\n                  Troca de Senha Obrigatória\n                </h3>\n                <p className=\"text-sm text-gray-600\">\n                  Por segurança, você deve trocar sua senha antes de continuar.\n                </p>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"newPassword\">Nova Senha</Label>\n                <Input\n                  id=\"newPassword\"\n                  type=\"password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  placeholder=\"Digite sua nova senha\"\n                  required\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"confirmPassword\">Confirmar Nova Senha</Label>\n                <Input\n                  id=\"confirmPassword\"\n                  type=\"password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  placeholder=\"Confirme sua nova senha\"\n                  required\n                />\n              </div>\n\n              {error && (\n                <Alert variant=\"destructive\">\n                  <AlertCircle className=\"h-4 w-4\" />\n                  <AlertDescription>{error}</AlertDescription>\n                </Alert>\n              )}\n\n              <Button\n                type=\"submit\"\n                className=\"w-full\"\n                disabled={isChangingPassword}\n              >\n                {isChangingPassword ? \"Trocando senha...\" : \"Trocar Senha\"}\n              </Button>\n            </form>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":["LoginForm","login","useAuth","email","setEmail","useState","password","setPassword","entidadeId","setEntidadeId","entidades","setEntidades","error","setError","successMessage","setSuccessMessage","isLoading","setIsLoading","needsPasswordChange","setNeedsPasswordChange","newPassword","setNewPassword","confirmPassword","setConfirmPassword","isChangingPassword","setIsChangingPassword","navigate","useNavigate","useEffect","entidadesData","AuthService","handleSubmit","e","response","handlePasswordChange","user","jsxs","Card","CardHeader","jsx","CardTitle","CardDescription","CardContent","Label","Input","Alert","AlertCircle","AlertDescription","Button","Select","value","SelectTrigger","SelectValue","SelectContent","entidade","SelectItem"],"mappings":"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"}